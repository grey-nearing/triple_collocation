clear all
close all
clc
addpath('tools');

% site names
siteNames = [{'Walnut Gulch'},{'Little Washita'},{'Fort Cobb'},{'Little River'},{'Reynolds Creek'}];
Nsites = length(siteNames);

% info bins
B = linspace(0,1,20);

% loop through sites
for s = 1:Nsites

 % screen report
 fprintf('Site %d of %d ... ',s,Nsites); tic;

 % ---- Loading Data --------------------------------------------
 % file name
 fname = strcat('data/smap_',num2str(s),'.txt');

 % load site data
 data = load(fname); 

 % replace missings with grandmas
 data(data<-9990) = 0/0;

 % find dates with missing SMAP, model, or averages
 data(any(isnan(data(:,4:7))'),:) = [];

 % find columns with more than half missing
 missing = zeros(size(data,2),1);
 for d = 8:size(data,2)
  I = find(isnan(data(:,d)));
  if length(I) > size(data,1)/2; missing(d) = 1; end;
 end 
 data(:,find(missing)) = [];

 % data dimensions
 [N(s),D(s)] = size(data);
 G(s) = D(s) - 7;

 % ---- Average Analysis ----------------------------------------
 % segregate data
 X = data(:,4); 
 Y = data(:,5); 
 Zs = data(:,6);
 Za = data(:,7);

 % linear TC
 [LEs,LIs] = linear_triple_collocation(X,Y,Zs);
 [LEa,LIa] = linear_triple_collocation(X,Y,Za);

 % nonlinear TC
 [NEs,NIs] = nonlinear_triple_collocation(X,Y,Zs,B);
 [NEa,NIa] = nonlinear_triple_collocation(X,Y,Za,B);

 % ---- Gauge Analysis ------------------------------------------
 % init storage
 LEg  = zeros(3,2,G(s)); 
 LIg  = zeros(3,2,G(s)); 
 NIg  = zeros(3,2,G(s)); 
 NEg  = zeros(3,2,G(s)); 

 remove = zeros(G(s),1);

 % loop through gauges
 for g = 1:G(s)

  % segregate data
  X = data(:,4); 
  Y = data(:,5); 
  Z = data(:,7+g); 
  T = data(:,6);
%  T = data(:,7);

  % remove missing data
  I = find(any(isnan([X,Y,Z]')));
  X(I) = []; Y(I) = []; Z(I) = []; T(I) = [];

  % linear TC 
  [LEg(:,1,g),LIg(:,1,g)] = linear_triple_collocation(X,Y,Z);

  % linear TC truths
  LEg(1,2,g) = cov(X-T)/cov(X);
  LEg(2,2,g) = cov(Y-T)/cov(Y);
  LEg(3,2,g) = cov(Z-T)/cov(Z);
  cc = corrcoef(X,T); LIg(1,2,g) = cc(2);
  cc = corrcoef(Y,T); LIg(2,2,g) = cc(2);
  cc = corrcoef(Z,T); LIg(3,2,g) = cc(2);

  % nonlinear tc routines
  [NEg(:,1,g),NIg(:,1,g)] = nonlinear_triple_collocation(X,Y,Z,B);

  % nonlinear tc truth
  [Ixt,Hx,Ht] = mutual_info(X,T,B,B);
  NIg(1,2,g) = Ixt/Hx;
  NEg(1,2,g) = 1-Ixt/Hx;

  [Ixt,Hx,Ht] = mutual_info(Y,T,B,B);
  NIg(2,2,g) = Ixt/Hx;
  NEg(2,2,g) = 1-Ixt/Hx;

  [Ixt,Hx,Ht] = mutual_info(Z,T,B,B);
  NIg(3,2,g) = Ixt/Hx;
  NEg(3,2,g) = 1-Ixt/Hx;

  % assert no errors
%  try
   gg = LEg(:,:,g); assert(~any(isnan(gg(:))));
   gg = LIg(:,:,g); assert(~any(isnan(gg(:))));
   gg = NEg(:,:,g); assert(~any(isnan(gg(:))));
   gg = NIg(:,:,g); assert(~any(isnan(gg(:))));
%  catch
%   remove(g) = 1;
%  end

 end

 % remove bad data
 LEg(:,:,find(remove)) = [];
 LIg(:,:,find(remove)) = [];
 NEg(:,:,find(remove)) = [];
 NIg(:,:,find(remove)) = [];

 % screen report
 t = toc; fprintf(' finished: time = %f \n',t);

 results(s).LEs = LEs; 
 results(s).LIs = LIs; 
 results(s).NEs = NEs; 
 results(s).NIs = NIs; 

 results(s).LEa = LEa; 
 results(s).LIa = LIa; 
 results(s).NEa = NEa; 
 results(s).NIa = NIa; 

 results(s).LEg = LEg; 
 results(s).LIg = LIg; 
 results(s).NEg = NEg; 
 results(s).NIg = NIg; 

end

% calc stats
for s = 1:Nsites
 ne_mse(:,s) = sum((results(s).NEg(:,1,:) - results(s).NEg(:,2,:)).^2);
 ni_mse(:,s) = sum((results(s).NIg(:,1,:) - results(s).NIg(:,2,:)).^2);
 le_mse(:,s) = sum((results(s).LEg(:,1,:) - results(s).LEg(:,2,:)).^2);
 li_mse(:,s) = sum((results(s).LIg(:,1,:) - results(s).LIg(:,2,:)).^2);
 Ns(s) = size(results(s).NEg,3); 
end
NEmse = sum(ne_mse,2); 
NImse = sum(ni_mse,2); 
LEmse = sum(le_mse,2); 
LImse = sum(li_mse,2); 

% screen report
NEmse = squeeze(ne_mse(:,:))'
LEmse = squeeze(le_mse(:,:))'
NImse = squeeze(ni_mse(:,:))'
LImse = squeeze(li_mse(:,:))'

Ediff = (LEmse - NEmse)%./LEmse
Idiff = (LImse - NImse)%./LImse

%% fraction of explained variance
%ne_sserr = 0; ne_sstot = 0; 
%le_sserr = 0; le_sstot = 0; 
%for s = 1:Nsites
% a = sum((results(s).NEg(:,1,:)-results(s).NEg(:,2,:)).^2,3);
% b = sum((results(s).NEg(:,2,:)-repmat(mean(results(s).NEg(:,2,:),3),[1,1,G(s)])).^2,3);
% ne_sserr = ne_sserr + a; 
% ne_sstot = ne_sstot + b; 
% NEfve(s,:) = 1-a./b;
% 
% a = sum((results(s).LEg(:,1,:)-results(s).LEg(:,2,:)).^2,3);
% b = sum((results(s).LEg(:,2,:)-repmat(mean(results(s).LEg(:,2,:),3),[1,1,G(s)])).^2,3); 
% le_sserr = le_sserr + a;
% le_sstot = le_sstot + b; 
% LEfve(s,:) = 1-a./b;
%end
%ne_fve = 1-ne_sserr./ne_sstot
%le_fve = 1-le_sserr./le_sstot
%
%ni_sserr = 0; ni_sstot = 0; 
%li_sserr = 0; li_sstot = 0; 
%for s = 1:Nsites
% ni_sserr = ni_sserr + sum((results(s).NIg(:,1,:)-            results(s).NIg(:,2,:))             .^2,3);
% ni_sstot = ni_sstot + sum((results(s).NIg(:,2,:)-repmat(mean(results(s).NIg(:,2,:),3),[1,1,G(s)])).^2,3); 
% li_sserr = li_sserr + sum((results(s).LIg(:,1,:)-            results(s).LIg(:,2,:))             .^2,3);
% li_sstot = li_sstot + sum((results(s).LIg(:,2,:)-repmat(mean(results(s).LIg(:,2,:),3),[1,1,G(s)])).^2,3); 
% LIfve(s,:) = 1-sum((results(s).LIg(:,1,:)-results(s).LIg(:,2,:)).^2,3)./sum( results(s).LIg(:,2,:).^2,3);
% NIfve(s,:) = 1-sum((results(s).NIg(:,1,:)-results(s).NIg(:,2,:)).^2,3)./sum( results(s).NIg(:,2,:).^2,3);
%end
%ni_fve = 1-ni_sserr./ni_sstot
%li_fve = 1-li_sserr./li_sstot

%%% *** Plot ***************************************************************
%%grab colors for ploting
%figure(100); h = plot(randn(10,10));
%colors = get(h,'Color');
%close(100);
%
%figure(2); close(2); figure(2);
%set(gcf,'color','w','position',[230         761        1500         750]);
%
%for d = 1:3
% subplot(2,3,d)
% hb = bar([LEfve(:,d),NEfve(:,d)]);
% hb(1).FaceColor = colors{4};
% hb(2).FaceColor = colors{6}; 
% set(gca,'XTickLabelRotation',45);
% hold on
% plot([-10,10],[le_fve(d),le_fve(d)],'linewidth',2,'color',colors{4});
% plot([-10,10],[ne_fve(d),ne_fve(d)],'linewidth',2,'color',colors{6});
% grid on
% set(gca,'xticklabels',siteNames);
% set(gca,'ylim',[-0.1,1],'xlim',[0,Nsites+1]);
% ylabel('explained variance','fontsize',18);
% if d == 1
%  legend('FEV by site: linear','FEV by site: nonlinear','FEV all sites: linear','FEV all sites: nonlinear','location','best'); 
%  title('Total Error: SMAP','fontsize',16);
% elseif d == 2
%  title('Total Error: ECMWF','fontsize',16);
% elseif d == 3
%  title('Total Error: in situ','fontsize',16);
% end
%
% subplot(2,3,3+d)
% hb = bar([LIfve(:,d),NIfve(:,d)]);
% hb(1).FaceColor = colors{4};
% hb(2).FaceColor = colors{6}; 
% set(gca,'XTickLabelRotation',45);
% hold on
% plot([-10,10],[li_fve(d),li_fve(d)],'linewidth',2,'color',colors{4});
% plot([-10,10],[ni_fve(d),ni_fve(d)],'linewidth',2,'color',colors{6});
% grid on
% set(gca,'xticklabels',siteNames);
% set(gca,'ylim',[-0.1,1],'xlim',[0,Nsites+1]);
% ylabel('explained variance','fontsize',18);
% if d == 1
%  title('Total Correlation: SMAP','fontsize',16);
% elseif d == 2
%  title('Total Correlation: ECMWF','fontsize',16);
% elseif d == 3
%  title('Total Correlation: in situ','fontsize',16);
% end
%end

%% *** Plot ***************************************************************
%grab colors for ploting
figure(100); h = plot(randn(10,10));
colors = get(h,'Color');
close(100);

figure(2); close(2); figure(2);
set(gcf,'color','w','position',[230         761        1500         750]);

for d = 1:3
 subplot(2,3,d)
 hb = bar([LEmse(:,d),NEmse(:,d)]);
 hb(1).FaceColor = colors{4};
 hb(2).FaceColor = colors{6}; 
 set(gca,'XTickLabelRotation',45);
% hold on
% plot([-10,10],[le_fve(d),le_fve(d)],'linewidth',2,'color',colors{4});
% plot([-10,10],[ne_fve(d),ne_fve(d)],'linewidth',2,'color',colors{6});
 grid on
 set(gca,'xticklabels',siteNames);
 set(gca,'ylim',[0,0.1],'xlim',[0,Nsites+1]);
 ylabel('MSE','fontsize',18);
 if d == 1
  legend('by site: linear','by site: nonlinear','all sites: linear','all sites: nonlinear','location','best'); 
  title('Total Error: SMAP','fontsize',16);
 elseif d == 2
  title('Total Error: ECMWF','fontsize',16);
 elseif d == 3
  title('Total Error: in situ','fontsize',16);
 end

 subplot(2,3,3+d)
 hb = bar([LImse(:,d),NImse(:,d)]);
 hb(1).FaceColor = colors{4};
 hb(2).FaceColor = colors{6}; 
 set(gca,'XTickLabelRotation',45);
% hold on
% plot([-10,10],[li_fve(d),li_fve(d)],'linewidth',2,'color',colors{4});
% plot([-10,10],[ni_fve(d),ni_fve(d)],'linewidth',2,'color',colors{6});
 grid on
 set(gca,'xticklabels',siteNames);
 set(gca,'ylim',[0,0.1],'xlim',[0,Nsites+1]);
 ylabel('MSE','fontsize',18);
 if d == 1
  title('Total Correlation: SMAP','fontsize',16);
 elseif d == 2
  title('Total Correlation: ECMWF','fontsize',16);
 elseif d == 3
  title('Total Correlation: in situ','fontsize',16);
 end
end

%% *** Plot ***************************************************************
%grab colors for ploting
figure(100); h = plot(randn(10,10));
colors = get(h,'Color');
close(100);


% scatter plots
figure(1); close(1); figure(1);
set(gcf,'color','w','position',[36         309        1842         661]);

for s = 1:Nsites

 subplot(2,Nsites,s)
 plot(squeeze(results(s).LEg(1,2,:)),squeeze(results(s).LEg(1,1,:)),'o','color',colors{1}); hold on;
 plot(squeeze(results(s).LEg(2,2,:)),squeeze(results(s).LEg(2,1,:)),'o','color',colors{2}); hold on;
 plot(squeeze(results(s).LEg(3,2,:)),squeeze(results(s).LEg(3,1,:)),'o','color',colors{3}); hold on;
 plot(squeeze(results(s).LIg(1,2,:)),squeeze(results(s).LIg(1,1,:)),'+','color',colors{1}); hold on;
 plot(squeeze(results(s).LIg(2,2,:)),squeeze(results(s).LIg(2,1,:)),'+','color',colors{2}); hold on;
 plot(squeeze(results(s).LIg(3,2,:)),squeeze(results(s).LIg(3,1,:)),'+','color',colors{3}); hold on;
 plot([0,1],[0,1],'k--')
 grid on; 
 title(strcat(siteNames{s},': Linear'),'fontsize',16);
 xlabel('true statistic','fontsize',18);
 ylabel('estimated statistic','fontsize',18);
 if s == 1; legend('error: SMAP','error: ECMWF','error: in situ','corr: SMAP','corr: ECMWF','corr: in situ','location','nw'); end
 axis([0,1,0,1]);
 set(gca,'xtick',0:0.2:1,'ytick',0:0.2:1);

 subplot(2,Nsites,Nsites+s)
 plot(squeeze(results(s).NEg(1,2,:)),squeeze(results(s).NEg(1,1,:)),'o','color',colors{1}); hold on;
 plot(squeeze(results(s).NEg(2,2,:)),squeeze(results(s).NEg(2,1,:)),'o','color',colors{2}); hold on;
 plot(squeeze(results(s).NEg(3,2,:)),squeeze(results(s).NEg(3,1,:)),'o','color',colors{3}); hold on;
 plot(squeeze(results(s).NIg(1,2,:)),squeeze(results(s).NIg(1,1,:)),'+','color',colors{1}); hold on;
 plot(squeeze(results(s).NIg(2,2,:)),squeeze(results(s).NIg(2,1,:)),'+','color',colors{2}); hold on;
 plot(squeeze(results(s).NIg(3,2,:)),squeeze(results(s).NIg(3,1,:)),'+','color',colors{3}); hold on;
 plot([0,1],[0,1],'k--')
 grid on; 
 title(strcat(siteNames{s},': Nonlinear'),'fontsize',16);
 xlabel('true statistic','fontsize',18);
 ylabel('estimated statistic','fontsize',18);
 axis([0,1,0,1]);
 set(gca,'xtick',0:0.2:1,'ytick',0:0.2:1);

end

fname = strcat('figures/Figure7_SMAP_EMCWF');
img = getframe(gcf);
imwrite(img.cdata, [fname, '.png']);



